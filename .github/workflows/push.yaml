# Name of our action
name: Release

# The event that will trigger the action
on:
  push:
    branches: [main]

permissions:
  contents: write
  pull-requests: write
  issues: write

# what the action will do
jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js from .nvmrc
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build

      - name: Test
        run: pnpm test

  coverage:
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js from .nvmrc
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run coverage
        run: pnpm test:coverage

      - name: Generate coverage badge
        run: |
          COVERAGE=$(cat coverage/coverage-summary.json | jq -r '.total.lines.pct')
          COLOR=$(if [ $COVERAGE -gt 90 ]; then echo 'brightgreen'; elif [ $COVERAGE -gt 80 ]; then echo 'green'; elif [ $COVERAGE -gt 70 ]; then echo 'yellowgreen'; elif [ $COVERAGE -gt 60 ]; then echo 'yellow'; else echo 'red'; fi)
          echo "https://img.shields.io/badge/coverage-$COVERAGE%25-$COLOR" > coverage/badge.txt

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: |
            coverage/
            coverage/badge.txt
          retention-days: 30

  release:
    needs: [validate, coverage]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, '[skip ci]')
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Use Node.js from .nvmrc
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpm release

  update-badge:
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main

      - name: Download coverage report
        uses: actions/download-artifact@v3
        with:
          name: coverage-report
          path: coverage

      - name: Get latest version
        id: version
        run: |
          VERSION=$(npm view pcssmdts version)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Update badges
        run: |
          COVERAGE=$(cat coverage/coverage-summary.json | jq -r '.total.lines.pct')
          COLOR=$(if [ $COVERAGE -gt 90 ]; then echo 'brightgreen'; elif [ $COVERAGE -gt 80 ]; then echo 'green'; elif [ $COVERAGE -gt 70 ]; then echo 'yellowgreen'; elif [ $COVERAGE -gt 60 ]; then echo 'yellow'; else echo 'red'; fi)
          COVERAGE_BADGE="https://img.shields.io/badge/coverage-$COVERAGE%25-$COLOR"
          VERSION_BADGE="https://img.shields.io/badge/npm-v${{ steps.version.outputs.version }}-blue"

          sed -i.bak -E \
            -e "s|!\[Coverage\]\([^)]*\)|![Coverage]($COVERAGE_BADGE)|" \
            -e "s|!\[npm\]\([^)]*\)\(](\[^)]*)\)?|[![npm]($VERSION_BADGE)](https://www.npmjs.com/package/pcssmdts)|" \
            README.md

      - name: Commit and push badges
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add README.md
          git commit -m "docs: update badges [skip ci]" || exit 0
          git push
